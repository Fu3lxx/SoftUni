---------------------------------
1
SELECT count(*)
FROM `wizzard_deposits`;
 
---------------------------------
2
SELECT max(`magic_wand_size`) as 'longest_magic_wand'
FROM `wizzard_deposits`;
 
---------------------------------
3
SELECT deposit_group, max(magic_wand_size) as 'longest_magic_wand'
FROM wizzard_deposits
GROUP BY deposit_group
ORDER BY longest_magic_wand asc, deposit_group;
 
---------------------------------
4
SELECT deposit_group
FROM wizzard_deposits
GROUP BY `deposit_group`
ORDER BY avg(magic_wand_size)
LIMIT 1;
 
---------------------------------
5
SELECT deposit_group, sum(deposit_amount) as 'total_sum'
FROM wizzard_deposits
GROUP BY `deposit_group`
order by `total_sum` ;
 
---------------------------------
6
SELECT deposit_group, sum(deposit_amount) as 'total_sum'
FROM wizzard_deposits
where `magic_wand_creator` = 'Ollivander family'
GROUP BY `deposit_group`
order by `deposit_group` ;
 
---------------------------------
7
SELECT deposit_group, sum(deposit_amount) as 'total_sum'
FROM wizzard_deposits
where `magic_wand_creator` = 'Ollivander family'
GROUP BY `deposit_group`
HAVING `total_sum` < 150000
order by `total_sum` desc ;
 
---------------------------------
8
SELECT deposit_group, magic_wand_creator, min(deposit_charge)
FROM wizzard_deposits
GROUP BY deposit_group, magic_wand_creator
ORDER BY magic_wand_creator,deposit_group asc;
 
---------------------------------
9
SELECT 
(CASE 
	WHEN `age` between 0 and 10 THEN '[0-10]'
    WHEN `age` between 11 and 20 THEN '[11-20]'
    WHEN `age` between 21 and 30 THEN '[21-30]'
    WHEN `age` between 31 and 40 THEN '[31-40]'
    WHEN `age` between 41 and 50 THEN '[41-50]'
    WHEN `age` between 51 and 60 THEN '[51-60]'
    else '[61+]'
END) as 'age_group',
count(id) as 'wizard_count'
FROM wizzard_deposits
GROUP  BY `age_group`
ORDER BY `wizard_count`;
 
---------------------------------
10
SELECT left(`first_name`,1) as 'first_letter'
FROM wizzard_deposits
where deposit_group = 'Troll Chest'
GROUP BY `first_letter`
ORDER BY `first_letter`;
 
---------------------------------
11
SELECT `deposit_group`, `is_deposit_expired` , avg(`deposit_interest`)
FROM wizzard_deposits
WHERE `deposit_start_date` > '1985-01-01'
GROUP BY `is_deposit_expired` , `deposit_group`
ORDER BY `deposit_group` desc, `is_deposit_expired` asc
;
 
---------------------------------
12
SELECT `department_id`, min(`salary`) as 'minimum_salary'
FROM employees
WHERE `department_id` in (2,5,7) and hire_date > '200-01-01'
GROUP BY department_id
ORDER BY department_id asc;
 
---------------------------------
13
CREATE TABLE `high_paid_employees` as
SELECT * FROM `employees`
WHERE `salary` > 30000 and `manager_id` != 42;

UPDATE `high_paid_employees`
SET `salary` = `salary` + 5000
WHERE `department_id` = 1;

SELECT `department_id`, avg(`salary`) as 'avg_salary'
FROM `high_paid_employees`
GROUP BY `department_id` 
ORDER BY `department_id`;
 
---------------------------------
14
SELECT `department_id` , max(salary) as 'max_salary'
FROM employees
GROUP BY `department_id`
HAVING `max_salary` not between 30000 and 70000
ORDER BY department_id;
 
---------------------------------
15
SELECT count(`salary`)
FROM employees
WHERE `manager_id` is null;
 
---------------------------------
16
SELECT e.`department_id`,
(
	SELECT distinct e2.`salary` FROM `employees` as e2
	WHERE e2.`department_id` = e.`department_id`
	ORDER BY e2.`salary` DESC
	LIMIT 1 OFFSET 2
) as `ths`
FROM `employees` as e
GROUP BY e.`department_id`
HAVING  ths is not null
ORDER BY e.`department_id`;
 
---------------------------------
17
SELECT e.`first_name`, e.`last_name`, e.`department_id`
FROM `employees` as e
WHERE e.`salary` > 
(
	SELECT avg(e2.`salary`) FROM `employees` as e2
	WHERE e2.`department_id` = e.`department_id`
)
ORDER BY `department_id`, `employee_id`
LIMIT 10;
 
---------------------------------
18
SELECT `department_id`, sum(`salary`)
FROM `employees`
GROUP BY `department_id`
ORDER BY `department_id`
 
